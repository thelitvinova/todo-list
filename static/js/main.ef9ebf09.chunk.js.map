{"version":3,"sources":["components/app-header.js","components/search-panel.js","components/todo-list-item.js","components/todo-list.js","components/item-status-filter.js","components/item-add-form.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onTermChange","e","props","onSearchChange","setState","target","value","type","placeholder","this","onChange","Component","TodoListItem","important","label","onToggleImportant","onToggleDone","onDelete","classNames","onClick","TodoList","items","elements","map","item","id","itemProps","key","filterButtons","name","ItemStatusFilter","filter","onFilterChange","buttons","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","React","App","maxId","search","createItem","toggleProperty","arr","propName","idx","findIndex","slice","length","toLowerCase","indexOf","doneCount","toDoCount","visibleItems","searchItems","filterItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef9ebf09.chunk.js","sourcesContent":["import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;","import React, { Component } from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    term: ''\n  };\n\n  onTermChange = (e) => {\n    const {onSearchChange = () => {}} = this.props;\n    this.setState({\n      term: e.target.value\n    });\n\n    onSearchChange(e.target.value);\n  };\n\n  render() {\n    return (\n      <input type=\"text\"\n             className=\"form-control search-input\"\n             placeholder=\"type to search\"\n             value={this.state.term}\n             onChange={ this.onTermChange } />\n    );\n  };\n}\n\n","import React from 'react';\nimport './todo-list-item.css';\n\nconst TodoListItem = ({ important, done,\n  label, onToggleImportant, onToggleDone, onDelete }) => {\n\nlet classNames = 'todo-list-item';\nif (important) {\nclassNames += ' important';\n}\n\nif (done) {\nclassNames += ' done';\n}\n\n\nreturn (\n<span className={classNames}>\n  <span\n    className=\"todo-list-item-label\"\n    onClick={onToggleDone}>{label}</span>\n\n  <button type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={onToggleImportant}>\n    <i className=\"fa fa-exclamation\"></i>\n  </button>\n\n  <button type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\"\n          onClick={onDelete}>\n    <i className=\"fa fa-trash-o\"></i>\n  </button>\n</span>\n);\n};\n\nexport default TodoListItem;","import React from 'react';\n\nimport TodoListItem from './todo-list-item';\n\nimport './todo-list.css';\n\nconst TodoList = ({ items, onToggleImportant, onToggleDone, onDelete }) => {\n\n    const elements = items.map((item) => {\n      const { id, ...itemProps } = item;\n      return (\n        <li key={id} className=\"list-group-item\">\n          <TodoListItem\n            { ...itemProps }\n            onToggleImportant={ () => onToggleImportant(id) }\n            onToggleDone={ () => onToggleDone(id) }\n            onDelete={ () => onDelete(id) } />\n        </li>\n      );\n    });\n  \n    return (<ul className=\"todo-list list-group\">{ elements }</ul>);\n  };\n  \n  export default TodoList;","import React from 'react';\n\nconst filterButtons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' }\n  ];\n  \n  const ItemStatusFilter = ({filter, onFilterChange = () => {}}) => {\n  \n    const buttons = filterButtons.map(({name, label}) => {\n      const isActive = name === filter;\n      const classNames = 'btn ' + (isActive ? 'btn-info' : 'btn-outline-secondary');\n  \n      return (\n        <button key={name}\n                type=\"button\"\n                onClick={() => onFilterChange(name)}\n                className={classNames}>{label}</button>\n      );\n    });\n  \n    return (\n      <div className=\"btn-group\">\n        { buttons }\n      </div>\n    );\n  };\n  \n  export default ItemStatusFilter;\n\n\n\n","import React from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends React.Component {\n    state = {\n        label: ''\n      };\n    \n      onLabelChange = (e) => {\n        this.setState({\n          label: e.target.value\n        })\n      };\n    \n      onSubmit = (e) => {\n        e.preventDefault();\n        const { label } = this.state;\n        this.setState({ label: '' });\n        const cb = this.props.onItemAdded || (() => {});\n        cb(label);\n      };\n    \n      render() {\n        return (\n          <form\n            className=\"bottom-panel d-flex\"\n            onSubmit={this.onSubmit}>\n    \n            <input type=\"text\"\n                   className=\"form-control new-todo-label\"\n                   value={this.state.label}\n                   onChange={this.onLabelChange}\n                   placeholder=\"What needs to be done?\" />\n    \n            <button type=\"submit\"\n                    className=\"btn btn-outline-secondary\">Add</button>\n          </form>\n        );\n      };\n    };\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppHeader from './components/app-header';\nimport SearchPanel from './components/search-panel';\nimport TodoList from './components/todo-list';\nimport ItemStatusFilter from './components/item-status-filter';\nimport ItemAddForm from './components/item-add-form';\nimport './components/index.css';\n\n\nexport default class App extends React.Component { \n    \n      maxId = 100;\n    \n      state = {\n        items: [\n          { id: 1, label: 'Drink Coffee', important: false, done: false },\n          { id: 2, label: 'Learn React', important: true, done: false },\n          { id: 3, label: 'Make Awesome App', important: false, done: false }\n        ],\n        filter: 'all',\n        search: ''\n      };\n    \n      onItemAdded = (label) => {\n        this.setState((state) => {\n          const item = this.createItem(label);\n          return { items: [...state.items, item] };\n        })\n      };\n    \n      toggleProperty = (arr, id, propName) => {\n        const idx = arr.findIndex((item) => item.id === id);\n        const oldItem = arr[idx];\n        const value = !oldItem[propName];\n    \n        const item = { ...arr[idx], [propName]: value } ;\n        return [\n          ...arr.slice(0, idx),\n          item,\n          ...arr.slice(idx + 1)\n        ];\n      };\n    \n      onToggleDone = (id) => {\n        this.setState((state) => {\n          const items = this.toggleProperty(state.items, id, 'done');\n          return { items };\n        });\n      };\n    \n      onToggleImportant = (id) => {\n        this.setState((state) => {\n          const items = this.toggleProperty(state.items, id, 'important');\n          return { items };\n        });\n      };\n    \n      onDelete = (id) => {\n        this.setState((state) => {\n          const idx = state.items.findIndex((item) => item.id === id);\n          const items = [\n            ...state.items.slice(0, idx),\n            ...state.items.slice(idx + 1)\n          ];\n          return { items };\n        });\n      };\n    \n      onFilterChange = (filter) => {\n        this.setState({ filter });\n      };\n    \n      onSearchChange = (search) => {\n        this.setState({ search });\n      };\n    \n      createItem(label) {\n        return {\n          id: ++this.maxId,\n          label,\n          important: false,\n          done: false\n        };\n      }\n    \n      filterItems(items, filter) {\n        if (filter === 'all') {\n          return items;\n        } else if (filter === 'active') {\n          return items.filter((item) => (!item.done));\n        } else if (filter === 'done') {\n          return items.filter((item) => item.done);\n        }\n      }\n    \n      searchItems(items, search) {\n        if (search.length === 0) {\n          return items;\n        }\n    \n        return items.filter((item) => {\n          return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n        });\n      }\n    \n      render() {\n        const { items, filter, search } = this.state;\n        const doneCount = items.filter((item) => item.done).length;\n        const toDoCount = items.length - doneCount;\n        const visibleItems = this.searchItems(this.filterItems(items, filter), search);\n    \n        return (\n          <div className=\"todo-app\">\n            <AppHeader toDo={toDoCount} done={doneCount}/>\n    \n            <div className=\"search-panel d-flex\">\n              <SearchPanel\n                onSearchChange={this.onSearchChange}/>\n    \n              <ItemStatusFilter\n                filter={filter}\n                onFilterChange={this.onFilterChange} />\n            </div>\n    \n            <TodoList\n              items={ visibleItems }\n              onToggleImportant={this.onToggleImportant}\n              onToggleDone={this.onToggleDone}\n              onDelete={this.onDelete} />\n    \n            <ItemAddForm\n              onItemAdded={this.onItemAdded} />\n          </div>\n        );\n      };\n    };\n\nReactDOM.render(<App />,\n     document.getElementById('root'));\n"],"sourceRoot":""}